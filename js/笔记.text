1，require可以异步加载文件
2，模块化开发  
   一个文件就是一个模块
  减少全局变量
3使用
  defin：定义模块
  require:加载模块
  第一个是模块名字，第二个是模块依赖，第三个 是模块的实现  最后是返回的对象
  第一个参数是构建工具自动生成，后续方便打包
  define('helper'，['jquery']，function($){
	return {trim:function(str){
		return $.trim(str);
	}}
  });
  require加载模块：
  第一个参数是模块名称
  第二个参数是模块的实现
  require(['helper'],function(helper){
	  var str = helper.trim(' amd ')；
	  console.log(str);
  })
加载文件
 require以一个相对于baseUrl的得治来加载所有的代码的
 学习网站：
 https://www.cnblogs.com/imnzq/p/6746330.html
 https://blog.csdn.net/bmwz508/article/details/79463675


 

 
定义模块的方法：

1，函数是定义，如上图
模块名不写
以来模块可写不写



difine({
  username:'1',
  name:'xiangxu'
})


不支持amd库的意思就是不支持，define  和require的写法的


如modernizr.js  bootstrap， jquery插件

shim就来了

    shim: {
        "Jquery-ui.custom":{
            deps: ['Jquery','Jquery.sparkline'],
            exports: 'Jquery_ui'
        },
        "Bootstrap": {
            deps: ['Jquery'],
            exports: 'Bootstrap'
        },
    },



    bootstrap 可以简写

    shim：{
      'bootstrap':['jquery']
    }
 
 根据配置完全后再全局中可不可以看到来判断是不是符合amd 的库和插件


 backbone 和unserscore这种互相已经定义的还需要自己去研究


 不支持amd库的如下

  "Bootstrap": {
            
            exports: 'Bootstrap'
    },


 只有依赖，没有全局变量
 bootstrap :['jquery']


 正常写法如下：
 "Bootstrap": {
            deps: ['Jquery'],
            exports: 'Bootstrap'
        },
    },

map：不同版本的库支持的东西不一样

    map：{
      ‘app/api’：{
        ‘jquery’：‘lib/jquery’
      }，
      ‘app/api1’：{
        ‘jquery’：‘lib/jquery2’
      }
    }



R.js打包

https://www.cnblogs.com/fnncat/p/7795207.html
